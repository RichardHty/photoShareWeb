CREATE DATABASE photoshare;USE photoshare;DROP TABLE IF EXISTS Comment;DROP TABLE IF EXISTS Befriends;DROP TABLE IF EXISTS Contains;DROP TABLE IF EXISTS Tagged;
DROP TABLE IF EXISTS LikeTable;
DROP TABLE IF EXISTS Tag;

DROP TABLE IF EXISTS Photo;
DROP TABLE IF EXISTS Album;DROP TABLE IF EXISTS Users;CREATE TABLE Users (          userID INT NOT NULL AUTO_INCREMENT,          gender VARCHAR(6),          email VARCHAR(40) UNIQUE,          password VARCHAR(40) NOT NULL,          DOB DATE,          hometown VARCHAR(40),          fname VARCHAR(40) NOT NULL,          lname VARCHAR(40) NOT NULL,          PRIMARY KEY (userID)      );CREATE   TABLE   Album         (albumID   INT NOT NULL AUTO_INCREMENT,         name   VARCHAR(40) NOT NULL,         userID   INT   NOT   NULL,         DOC DATE NOT NULL,         PRIMARY   KEY   (albumID),         FOREIGN   KEY   (userID) REFERENCES   Users(userID) ON DELETE CASCADE);CREATE   TABLE   Photo         (photoID   INT NOT NULL AUTO_INCREMENT,        albumID   INT NOT NULL,         caption   VARCHAR(200),         data   BLOB NOT NULL,         PRIMARY   KEY   (photoID),   FOREIGN KEY (albumID) REFERENCES Album(albumID) ON DELETE CASCADE);CREATE   TABLE   Comment          (commentID   INT NOT NULL AUTO_INCREMENT,       text   VARCHAR(200) NOT NULL,       userID   INT   NOT   NULL,       photoID   INT   NOT   NULL,       DOC DATE,       PRIMARY   KEY   (commentID),       FOREIGN   KEY   (userID) REFERENCES   Users(userID)   ON   DELETE   CASCADE,       FOREIGN   KEY   (photoID) REFERENCES   Photo(photoID)   ON   DELETE   CASCADE);CREATE TABLE LikeTable(	uid INT NOT NULL,	pid INT NOT NULL,	DOC DATE NOT NULL,             PRIMARY KEY (uid, pid),	FOREIGN KEY (uid) REFERENCES Users(userID) ON DELETE CASCADE,	FOREIGN KEY (pid) REFERENCES Photo(photoID) ON DELETE CASCADE);CREATE   TABLE   Befriends         (userID1 INT NOT NULL,         userID2 INT NOT NULL,         PRIMARY   KEY  (userID1,   userID2),          FOREIGN   KEY   (userID1) REFERENCES   Users(userID)   ON   DELETE CASCADE, FOREIGN   KEY   (userID2) REFERENCES   Users(userID)   ON   DELETE CASCADE);CREATE   TABLE   Contains         (albumID   INT   NOT   NULL,         photoID   INT,         PRIMARY   KEY   (albumID,   photoID),  FOREIGN   KEY (albumID) REFERENCES   Album(albumID)   ON   DELETE   CASCADE,   FOREIGN   KEY (photoID) REFERENCES   Photo(photoID)   ON   DELETE CASCADE);CREATE   TABLE   Tagged         (photoID   INT   NOT   NULL,         tag   VARCHAR(64) NOT NULL,         PRIMARY   KEY   (photoID,   tag),         FOREIGN   KEY   (photoID) REFERENCES   Photo(photoID)   ON   DELETE   CASCADE);